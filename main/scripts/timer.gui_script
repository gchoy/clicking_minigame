-- set value of numeric time indicator (from 0 to 60s)
local function update_numeric(p)
	local node = gui.get_node("numeric")
	gui.set_text(node, tostring(p) .. "s")
end

-- update radial/circle time indicator by changing the fill angle
local function update_radial(p)
	local color = vmath.vector3(1.0, 0.0, 0.0)
	local node = gui.get_node("radial")
	local angle = p * 6
	if angle == 90 then
		gui.set_color(node, color)
	end
	gui.set_fill_angle(node, angle)
end

function on_message(self, message_id, message, sender)
	
	if message_id == hash("coin_diff") then
		if message.coin_diff and self.timer_info then
			print("Player Wins!")
			msg.post("main#end_message","win",{result = "You Won!"})
			timer.cancel(self.timer_id)
		end
		
		self.coin_diff = message.coin_diff
		
		
	end 

end

function init(self)
	self.count = 60            -- so that the counter starts at 60 seconds
	local interval = 1        -- unit by which the pie is increased or in this case decreased
	local repeating = true    

	local pie = gui.get_node("radial")
	local size = gui.get_size(pie)
	size.x = size.x + 10
	gui.set_size(pie, size)
	
	self.timer_id = timer.delay(interval, repeating, function()        
		self.count = self.count - 1                    
		local p = self.count % 60
		print(self.count)
		
		if self.count <= 0 then
			timer.cancel(self.timer_id)
			if self.coin_diff == false then
				msg.post("main#end_message","lose", {result = "You Lost!"})
				print("Player Loses!")
			end
		end

		update_numeric(p)                            
		update_radial(p)                            
	end)
	self.timer_info = timer.get_info(self.timer_id)	
end